#Exécuter le module command (i.e: -m) avec des arguments (-a) pwd
ansible webservers -i hosts -m command -a "pwd"

#Changer le niveau de logs
ansible webservers -i hosts -m command -a "pwd" -vvv

#Afficher l'aide de la commande ansible
ansible -h

#Ajouter les options -u and -k pour saisir le login et le mot de passe
ansible webservers -i hosts -m command -a "pwd" -vvv -u login -k

#Lister le contenu du repertoire racine des serveurs distants avec le module command :
ansible webservers -i hosts -m command -a "ls -l /" -u user -k

#Exécuter le module ping
ansible webservers -i hosts -m ping"

#Executer un script shell sur les serveurs distants avec le module script:
ansible webservers -i hosts -m script -a "my_script.sh 76542" -u user -k

#Affichage des faits des machines distantes
ansible all -i hosts -m setup -u user -k

#Affichage des facts avec un filtre sur ipv4
ansible all -i hosts -m setup -a 'filter=*ipv4*' -u user -k

#Affichage des facts avec un filtre sur les interface 0, 1 et 2
ansible all -i hosts -m setup -a 'filter=ansible_eth[0-2]'

#Add ssh key to ssh key manager
ssh-add ~/.ssh/id_rsa 

#Start ssh key agent
eval $(ssh-agent -s)

#Creer le group automatic sur les serveurs distants avec le module group:
ansible webservers -i hosts -m group -a "state=present name=automatic" -u user -k -b -K

#creer l'utilisateur user avec le module user:
ansible webservers -i hosts -m user -a "state=present name=automatic groups=automatic shell=/bin/bash" -u user -k -b -K

ansible webservers -i hosts -m authorized_key -a "state=present user=automatic key='https://raw.githubusercontent.com/jptraining/ansible/master/keys/id_rsa.pub'" -u user -k -b -K


